name: Build Sunshine (Windows)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_win:
    name: Build and Package for Windows
    runs-on: windows-2019

    steps:
      # 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: false # 不自动初始化子模块

      # 手动初始化和更新子模块
      - name: Initialize Submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive

      # 下载 FFmpeg 预编译二进制文件
      - name: Download FFmpeg Binaries
        run: |
          mkdir -p third-party/build-deps/dist/Windows-AMD64
          curl -L -o ffmpeg.zip https://example.com/path/to/ffmpeg-binaries.zip
          unzip ffmpeg.zip -d third-party/build-deps/dist/Windows-AMD64

      # 设置 MSYS2 环境并安装依赖
      - name: Setup MSYS2 and Install Dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            diffutils
            git
            make
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-boost
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-curl
            mingw-w64-x86_64-miniupnpc
            mingw-w64-x86_64-nlohmann-json
            mingw-w64-x86_64-nodejs
            mingw-w64-x86_64-nsis
            mingw-w64-x86_64-onevpl
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-opus
            mingw-w64-x86_64-toolchain
            nasm
            wget
            yasm

      # 构建项目
      - name: Build Project
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          cmake \
            -DBUILD_WERROR=ON \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DSUNSHINE_ASSETS_DIR=assets \
            -G "MinGW Makefiles" \
            ..
          mingw32-make -j$(nproc)

      # 打包项目
      - name: Package Project
        shell: msys2 {0}
        run: |
          mkdir -p artifacts
          cd build
          cpack -G NSIS
          cpack -G ZIP
          mv ./cpack_artifacts/Sunshine.exe ../artifacts/sunshine-windows-installer.exe
          mv ./cpack_artifacts/Sunshine.zip ../artifacts/sunshine-windows-portable.zip

      # 上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sunshine-windows
          path: artifacts/
