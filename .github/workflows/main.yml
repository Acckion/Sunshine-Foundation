name: "CodeQL"

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  schedule:
    - cron: '00 12 * * 0'  # 每周日 12:00 UTC

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze (Windows)
    runs-on: windows-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # 设置 MSYS2 环境并更新 CMake
      - name: Setup MSYS2 and Install Dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          update: true
          install: >-
            base-devel
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-gdb
            mingw-w64-ucrt-x86_64-boost
            mingw-w64-ucrt-x86_64-curl
            mingw-w64-ucrt-x86_64-openssl
            mingw-w64-ucrt-x86_64-nlohmann-json
            mingw-w64-ucrt-x86_64-miniupnpc
            mingw-w64-ucrt-x86_64-nodejs
            mingw-w64-ucrt-x86_64-nsis
            mingw-w64-ucrt-x86_64-toolchain

      # 初始化 CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: cpp
          config: |
            paths-ignore:
              - build
              - node_modules
              - third-party

      # 预构建步骤（可选）
      - name: Prebuild
        id: prebuild
        run: |
          # 如果有预构建脚本，可以在此运行
          filename=".codeql-prebuild-cpp-windows.sh"
          if [ -f "./${filename}" ]; then
            echo "Running prebuild script: ${filename}"
            ./${filename}
          fi

      # 自动构建
      - name: Autobuild
        if: steps.prebuild.outputs.skip_autobuild != 'true'
        uses: github/codeql-action/autobuild@v3

      # 执行 CodeQL 分析
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:cpp"
          output: sarif-results
          upload: failure-only

      # 过滤 SARIF 文件
      - name: Filter SARIF
        uses: advanced-security/filter-sarif@v1
        with:
          input: sarif-results/cpp.sarif
          output: sarif-results/cpp.sarif
          patterns: |
            -build/**
            -node_modules/**
            -third\-party/**

      # 上传 SARIF 文件
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-results/cpp.sarif

      # 上传分析结果作为构建产物
      - name: Upload loc as a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sarif-results-cpp-windows
          path: sarif-results
          retention-days: 1
